sandbox = {};
file_details={};

load_file_click=function() {
	load_file().then(x=>load_jsnb(x))


	}
	
run_all=function(){

    // Send a message object to the iframe
   
      const message = {
        action:"run_all",
        data:""      
       };
      sandbox.contentWindow.postMessage(message, '*');

}
download_nb=function(){

    // Send a message object to the iframe
   
      const message = {
        action:"get_nb",
        data:"",
        call_bk:"download_nb"
      };
      sandbox.contentWindow.postMessage(message, '*');
    
    

 	
}

download_js=function(){
 	
 	const message = {
        action:"get_nb",
        data:"",
        call_bk:"download_js"
      };
      sandbox.contentWindow.postMessage(message, '*');
    

}

load_jsnb=function(content){

      const message = {
        action:"load_jsnb",
        data:content,
        call_bk:""
      };
      
      sandbox.contentWindow.postMessage(message, '*');
      
      var nb=JSON.parse(content);
      var run_on_load = nb.run_on_load || false;
      document.title = nb.metadata.name+": JSNB (JavaScript Notebook)";
      var metaDescription = document.querySelector('meta[name="description"]');

	// Set the description dynamically
	var newDescription = nb.metadata.name+" Notebook for experimenting in JavaScript. Contains code ediable code and output. Play with html and code using a simple interface."
	metaDescription.setAttribute("content", newDescription);
      get_dom("run_on_load").checked=run_on_load;
	

}

download_html=function(only_output){

    // Send a message object to the iframe
   
      const message = {
        action:"get_html",
        data:{only_output:only_output},
        call_bk:"download_html"
      };
      sandbox.contentWindow.postMessage(message, '*');
    
   
}

insert_cell=function(type){
	 // Send a message object to the iframe
   
      const message = {
        action:"insert_cell",
        data:{type:type},
        call_bk:""
      };
      sandbox.contentWindow.postMessage(message, '*');
}

message_handler=async function(action,data,call_bk){
	if(action=="initialize_sandbox"){
 		try{ url=window.location.href.split("#")[1];} catch(e){url=''}
	  	if(url!=undefined && url.length>1){
	  		if(url.split(":")[0].trim()=='github') initialize_from_git(url.split(":")[1].trim());
	  		else read_file(url,load_jsnb,err=>{alert(err.message)});
	  	}else{
	  		insert_cell("code");
	  	}
 	}
 	if(action=="download_nb"){
		data['run_on_load'] = get_dom("run_on_load").checked;
 		download_string(JSON.stringify(data,undefined,2),data.metadata.name+'.jsnb',"data:text/json;charset=utf-8");	
 	}
 	if(action=="download_html"){
 		download_string(data['html'],data['name']+'.html',"data:text/html;charset=utf-8");	
 	}
 	if(action=="download_js"){
	 	js=data.cells.filter(x=>x.type=='code').map(x=>x['code']);
	 	js=js.join("\n/*---------*/\n");
	 	js="/*Generated by JSNB: https://github.com/gopi-suvanam/jsnb*/\n\n"+js;
	 	download_string(js,data.metadata.name+'.js',"data:text/js;charset=utf-8");

 	}
 	if(action=="upload_to_git"){
 		data['run_on_load'] = get_dom("run_on_load").checked;
 		content=JSON.stringify(data,undefined,2);
		upload_file_to_git(file_details['token'],content,file_details['user'],file_details['repo'],file_details['path'])
		.then(x=>{
			alert("Successfully pushed");
			closeModal(get_dom('git-import-export'));
				const nextURL = `#github:${file_details['user']}/${file_details['repo']}/${file_details['path']}`;
				const nextTitle = 'JavaScript Notebook';
				const nextState = { additionalInformation: 'Updated the URL with JS' };
				window.history.pushState(nextState, nextTitle, nextURL);
	
			})
		.catch(error=>{alert("Error: "+error)})
 	}

}
insitialize_page=async function(){
	sandbox = await wait_for_dom('sandbox');
	
  	document.onkeyup = function(e) {
	  if (e.ctrlKey && e.key === 's') {
	    download_nb();
	  } else if (e.ctrlKey && e.key === 'g') {
	    openModal(get_dom('git-import-export'));
	  } else if (e.ctrlKey && e.key === 'o') {
	    load_file_click()
			
	  }
	  else if (e.altKey && e.key === 'Â®') {
	    run_all()
			
	  }
	  else if (e.altKey && e.key === 'r') {
	    run_all()
			
	  }
	};
	
	window.addEventListener('message', function(event) {
	      if (event.source === sandbox.contentWindow) {
	        const message = event.data;
	        console.log(message);
	        message_handler(message.action,message.data,"");
	      }
	    });
	  	
}

