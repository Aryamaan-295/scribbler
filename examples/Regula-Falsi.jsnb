{
  "metadata": {
    "name": "Regula Falsi Method for Solving Equations",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "regulaFalsi=function(func, a, b, tolerance, maxIterations) {\n  let c;\n  let iterations = 0;\n\n  while (Math.abs(b - a) > tolerance && iterations < maxIterations) {\n    c = (a * func(b) - b * func(a)) / (func(b) - func(a));\n\n    if (func(c) === 0) {\n      break; // Found exact root\n    } else if (func(a) * func(c) < 0) {\n      b = c;\n    } else {\n      a = c;\n    }\n\n    iterations++;\n  }\n\n  return c;\n}\n\n",
      "status": "[1]<br><span style=\"font-size:8px\">2ms<span></span></span>",
      "output": "function(func, a, b, tolerance, maxIterations) {\n  let c;\n  let iterations = 0;\n\n  while (Math.abs(b - a) &gt; tolerance &amp;&amp; iterations &lt; maxIterations) {\n    c = (a * func(b) - b * func(a)) / (func(b) - func(a));\n\n    if (func(c) === 0) {\n      break; // Found exact root\n    } else if (func(a) * func(c) &lt; 0) {\n      b = c;\n    } else {\n      a = c;\n    }\n\n    iterations++;\n  }\n\n  return c;\n} <br>",
      "type": "code"
    },
    {
      "code": "// Example usage\nf=x=> x * x - 4; // Solve the equation x^2 - 4 = 0\nvar root = regulaFalsi(f, 1, 3, 0.0001, 100);\nshow(\"Approximate root:\", root, \"function value:\",f(root));\n\nf=x=>3*x + Math.sin(x) - Math.exp(x); // Solve the equation 3x-sin(x)-exp(x)=0\n root = regulaFalsi(f, 1, 3, 0.0001, 100);\nshow(\"Approximate root:\", root, \"function value:\",f(root));\n",
      "status": "[5]<br><span style=\"font-size:8px\">2ms<span></span></span>",
      "output": "Approximate root: 2 function value: 0 <br>Approximate root: 1.890029729251985 function value: 8.881784197001252e-16 <br>",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}